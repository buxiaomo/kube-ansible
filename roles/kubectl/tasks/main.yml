---
# tasks file for kubectl
- name: Install the binary
  copy: 
    src: '{{ item }}'
    dest: /usr/local/bin/
    mode: 0755
    owner: root
    group: root
  with_items:
    - kubectl

- name: Install kubectl completion
  copy: 
    src: kubectl.sh
    dest: /etc/profile.d/
    mode: 0755
    owner: root
    group: root

- name: Distribution of certificate
  copy: 
    src: '{{ item }}'
    dest: '{{ca.kubernetes.location }}'
    owner: root
    group: root
  with_items:
    - '{{ca.kubernetes.location }}/ca.crt'
    - '{{ca.kubernetes.location }}/admin.crt'
    - '{{ca.kubernetes.location }}/admin.key'

- name: Create kubeconfig
  shell: |
    kubectl config set-cluster {{ kubernetes.name }} \
      --certificate-authority=/etc/kubernetes/pki/ca.crt \
      --embed-certs=true \
      --server=https://{{ ansible_default_ipv4.address }}:6443 \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }} && \
     kubectl config set-credentials {{ item.KUBE_USER }} \
      --client-certificate=/etc/kubernetes/pki/{{ item.KUBE_CERT }}.crt \
      --client-key=/etc/kubernetes/pki/{{ item.KUBE_CERT }}.key \
      --embed-certs=true \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }} && \
     kubectl config set-context {{ item.KUBE_USER }}@{{ kubernetes.name }} \
      --cluster={{ kubernetes.name }} \
      --user={{ item.KUBE_USER }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }} && \
     kubectl config use-context {{ item.KUBE_USER }}@{{ kubernetes.name }} --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }} 
  with_items:
    - { KUBE_USER: 'kubernetes-admin', KUBE_CERT: "admin", KUBE_CONFIG: 'admin.kubeconfig'}
